name: API workflow

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    name: Test python API
    steps:
    - uses: actions/checkout@v4
    - name: Install requirements
      run: pip install -r requirements.txt
    #----------------------------------------------
    #       install & configure poetry
    #----------------------------------------------
    - name: Install and configure Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true

    #----------------------------------------------
    #       load cached venv if cache exists
    #----------------------------------------------
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

    #----------------------------------------------
    #       install dependencies if cache does not exist
    #----------------------------------------------
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --verbose --no-interaction --no-root

    #----------------------------------------------
    #       install your root project, if required
    #----------------------------------------------
    - name: Install project
      run: poetry install --verbose --no-interaction
    
    - run: docker compose build
    - run: docker compose -f docker-compose.db.yml down -v --remove-orphans
    - run: docker compose -f docker-compose.db.yml up -d

    - name: Upload coverage reports to Codecov
      run: |
        # Replace `linux` below with the appropriate OS
        # Options are `alpine`, `linux`, `macos`, `windows`
        curl -Os https://uploader.codecov.io/latest/linux/codecov
        chmod +x codecov
        ./codecov -t ${CODECOV_TOKEN}

    - run: docker compose -f docker-compose.db.yml down -v --remove-orphans